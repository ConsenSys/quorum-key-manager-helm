apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "quorumkeymanager.fullname" . }}
  labels:
    {{- include "quorumkeymanager.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "quorumkeymanager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/manifests: {{ include (print $.Template.BasePath "/manifests-secret.yaml") . | sha256sum }}
        {{- if .Values.environment }}
        checksum/configEnv: {{ include (print $.Template.BasePath "/configmap-env.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.environmentSecrets }}
        checksum/secretEnv: {{ include (print $.Template.BasePath "/secret-env.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "quorumkeymanager.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.imageCredentials }}
      imagePullSecrets:
        - name: {{ include "quorumkeymanager.imagePullSecretName" . }}
      {{- end }}
      serviceAccountName: {{ include "quorumkeymanager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if gt (len .Values.vault.agents) 0 }}
        {{- $environment := .Values.environment }}
        {{- $environmentSecrets := .Values.environmentSecrets }}
        {{- range .Values.vault.agents }}
        {{- $agentImage := printf "%s:%s" .image.repository .image.tag }}
        - name: init-token
          securityContext:
            capabilities:
              add:
              - IPC_LOCK
          image: {{ $agentImage }}
          args:
            - "agent"
            - "-config"
            - "/vault/config/init-agent-config-{{ .name }}.hcl"
          env:
            - name: SKIP_CHOWN
              value: "true"
          volumeMounts:
            - name: vault-token
              mountPath: /vault/token
            - name: vault-config
              mountPath: /vault/config
            - name: vault-tls
              mountPath: /vault/tls
        {{- end }}
        {{- end }}
      containers:
        {{- if gt (len .Values.vault.agents) 0 }}
        {{- $configMap := printf "%s-%s" (include "quorumkeymanager.fullname" . ) "envmap" -}}
        {{- $secret :=  printf "%s-%s" (include "quorumkeymanager.fullname" .) "secretmap" -}}
        {{- $environment := .Values.environment -}}
        {{- $environmentSecrets := .Values.environmentSecrets -}}
        {{- range .Values.vault.agents }}
        {{- $agentImage := printf "%s:%s" .image.repository .image.tag }}
        - name: vault-agent-{{ .name }}
          securityContext:
            capabilities:
              add:
              - IPC_LOCK
          image: {{ $agentImage }}
          args:
            - "agent"
            - "-config"
            - "/vault/config/agent-config-{{ .name }}.hcl"
          env:
            - name: SKIP_CHOWN
              value: "true"
          {{- if or $environment $environmentSecrets }}
          envFrom:
            {{- if $environment }}
            - configMapRef:
                name: {{ $configMap }}
                optional: true
            {{- end }}
            {{- if $environmentSecrets }}
            - secretRef:
                name: {{ $secret }}
                optional: true
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: vault-token
              mountPath: /vault/token
            - name: vault-config
              mountPath: /vault/config
            - name: vault-tls
              mountPath: /vault/tls
        {{- end }}
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - run
            - --manifest-path
            - /manifests/manifests.yaml
          {{- if or .Values.environment .Values.environmentSecrets }}
          envFrom:
            {{- if .Values.environment }}
            - configMapRef:
                name: {{ include "quorumkeymanager.fullname" . }}-envmap
                optional: true
            {{- end }}
            {{- if .Values.environmentSecrets }}
            - secretRef:
                name: {{ include "quorumkeymanager.fullname" . }}-secretmap
                optional: true
            {{- end }}
          {{- end }}
          ports:
            - name: http-svc
              containerPort: 8080
              protocol: TCP
            - name: http-metrics
              containerPort: 8081
              protocol: TCP
          volumeMounts:
          {{- if or .Values.storage.nfs.enabled .Values.storage.existing }}
            - name: vault-token
              mountPath: {{ .Values.storage.mountPath }}
          {{- end }}
          {{- if and (gt (len .Values.vault.agents) 0 ) .Values.vault.tls.enabled }}
          {{- range .Values.vault.agents }}
            - name: agent-secret-{{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          {{- end }}     
          {{- if .Values.postgresql.tls.enabled }}
            - name: postgres-certs
              mountPath: /postgres/certs
              readOnly: true
          {{- end }}
          {{- if .Values.auth.apikey.enabled }}
            - name: apikey-file
              mountPath: /apikey
              readOnly: true
          {{- end }}
          {{- if .Values.auth.tls.enabled }}
            - name: qkm-certs
              mountPath: /certificates
              readOnly: true
          {{- end }}
          {{- if .Values.auth.oidc.enabled }}
            - name: oidc-certs
              mountPath: /oidc_certs
              readOnly: true
            - name: oidc-pubkey
              mountPath: /oidc_pub
              readOnly: true
          {{- end }}
            - name: manifests-config
              mountPath: /manifests
          livenessProbe:
            httpGet:
          {{- if .Values.auth.tls.enabled }}
              scheme: HTTPS
          {{ end }}
              path: /live
              port: http-metrics
          readinessProbe:
            httpGet:
          {{- if .Values.auth.tls.enabled }}
              scheme: HTTPS
          {{ end }}
              path: /ready
              port: http-metrics
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      {{- if .Values.storage.nfs.enabled }}
        - name: vault-token
          persistentVolumeClaim:
            claimName: {{ include "quorumkeymanager.fullname" . }}-nfs-claim
      {{- end }}
      {{- if and (gt (len .Values.vault.agents) 0 ) .Values.vault.tls.enabled }}
      {{- range .Values.vault.agents }}
        - name: agent-secret-{{ .name }}
          secret:
            secretName: qkm-agent-secret-{{ .name }}
      {{- end }}
      {{- end }} 
      {{- if .Values.postgresql.tls.enabled }}
        - name: postgres-certs
          secret:
            secretName: {{ include "quorumkeymanager.fullname" . }}-postgres-certs
      {{- end }}
      {{- if .Values.auth.apikey.enabled }}
        - name: apikey-file
          configMap:
            name: {{ include "quorumkeymanager.fullname" . }}-apikey-file
      {{- end }}
      {{- if .Values.auth.tls.enabled }}
        - name: qkm-certs
          secret:
            secretName: {{ .Values.auth.tls.secretName }}
      {{- end }}
      {{- if .Values.auth.oidc.enabled }}
        - name: oidc-certs
          secret:
            secretName: {{ include "quorumkeymanager.fullname" . }}-oidc-certs
        - name: oidc-pubkey
          secret:
            secretName: {{ include "quorumkeymanager.fullname" . }}-oidc-pubkey
      {{- end }}
        - name: manifests-config
          secret:
            secretName: {{ include "quorumkeymanager.fullname" . }}-manifests      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
